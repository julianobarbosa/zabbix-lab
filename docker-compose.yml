version: "3"

# docker network create zabbix-lab-network
networks:
  zabbix-lab-network:
    external:
        name: zabbix-lab-network

volumes:
  db_data:
    driver: local
  grafana_data:
    driver: local
  pgadmin_data:
    driver: local

services:
  zabbix-server:
    hostname: zabbix-server
    restart: unless-stopped
    image: zabbix/zabbix-server-pgsql:alpine-${ZABBIX_VERSION}
    environment:
      - DB_SERVER_PORT=5432
      - DB_SERVER_HOST=postgresql
      - POSTGRES_DB=zabbix
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix
    volumes:
      - ./zabbix/usr/lib/zabbix/externalscripts:/usr/lib/zabbix/externalscripts:ro
    networks:
      - zabbix-lab-network
    depends_on:
      - postgresql

  zabbix-frontend:
    hostname: zabbix-frontend
    restart: unless-stopped
    image: zabbix/zabbix-web-apache-pgsql:alpine-${ZABBIX_VERSION}
    environment:
      - DB_SERVER_PORT=5432
      - DB_SERVER_HOST=postgresql
      - POSTGRES_DB=zabbix
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix
      - PHP_TZ=America/Sao_Paulo
      - ZBX_SERVER_NAME=zabbix-server
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./zabbix/etc/ssl/apache2:/etc/ssl/apache2:ro
    ports:
      - 8080:8080
      - 8443:443
    networks:
      - zabbix-lab-network
    depends_on:
      - postgresql
      - zabbix-server

  postgresql:
    hostname: postgresql
    restart: unless-stopped
    image: postgres:${POSTGRES_VERSION}-alpine
    environment:
      - POSTGRES_DB=zabbix
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=zabbix
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - zabbix-lab-network
    command: ["postgres", "-c", "max_connections=1000"]

  zabbix-agent:
    hostname: zabbix-agent
    restart: unless-stopped
    image: zabbix/zabbix-agent:alpine-${ZABBIX_VERSION}
    environment:
      - ZBX_HOSTNAME=zabbix-agent
      - ZBX_DEBUGLEVEL=4
      - ZBX_ENABLEREMOTECOMMANDS=1
      - ZBX_SERVER_HOST=zabbix-server
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./zabbix/etc/zabbix/zabbix_agentd.d:/etc/zabbix/zabbix_agentd.d:ro
      - ./zabbix/frontend_hacks:/usr/share/zabbix/local/
    networks:
      - zabbix-lab-network
    depends_on:
      - zabbix-server

  grafana:
    hostname: grafana
    restart: unless-stopped
    image: grafana/grafana
    environment:
      - GF_INSTALL_PLUGINS=alexanderzobnin-zabbix-app
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=alexanderzobnin-zabbix-datasource
      - GF_LOG_LEVEL=debug
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=mailhog:1025
      - GF_SMTP_USER=
      - GF_SMTP_PASSWORD=
      - GF_SMTP_CERT_FILE=
      - GF_SMTP_KEY_FILE=
      - GF_SMTP_EHLO_IDENTITY=
      - GF_SMTP_SKIP_VERIFY=false
      - GF_SMTP_FROM_ADDRESS=grafana@zabbixlab.local
      - GF_SMTP_NAME=Grafana-ZabbixLab
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 3000:3000
    networks:
      - zabbix-lab-network
    depends_on:
      - zabbix-frontend

  zapix:
    hostname: zapix
    restart: unless-stopped
    build:
      context: ./zapix
    ports:
      - 8081:80
    networks:
      - zabbix-lab-network
    depends_on:
      - zabbix-frontend

  pgadmin:
    hostname: pgadmin
    restart: unless-stopped
    image: thajeztah/pgadmin4
    volumes:
      - pgadmin_data:/pgadmin
    networks:
      - zabbix-lab-network
    depends_on:
      - postgresql

  mailhog:
    hostname: mailhog
    restart: unless-stopped
    image: mailhog/mailhog:v1.0.0
    networks:
      - zabbix-lab-network
    environment:
      - MH_HOSTNAME=mailhog

  zabbix-provisioning:
    hostname: zabbix-provisioning
    image: python:3.8.5-alpine3.12
    command: ["python", "/tmp/provisioning.py"]
    volumes:
      - ./zabbix/provisioning.py:/tmp/provisioning.py:ro
    networks:
      - zabbix-lab-network
    depends_on:
      - zabbix-frontend

  metabase:
    image: metabase/metabase
    container_name: metabase
    hostname: metabase
    ports:
      - "3001:3000"
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=metabase
      - MB_DB_PORT=5432
      - MB_DB_USER=zabbix
      - MB_DB_PASS=zabbix
      - MB_DB_HOST=postgres
    restart: always
    
  mysql:
    image: mysql:8.0
    container_name: mysql
    hostname: mysql
    volumes:
      - /var/lib/mysql:/var/lib/mysql
    env_file:
      - ./mysql.env
    restart: always
    
  glpi:
    image: glpi
    build:
      context: ./glpi
    container_name : glpi
    hostname: glpi
    ports:
      - "8082:80"
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/www/html/glpi/:/var/www/html/glpi
    environment:
      - TIMEZONE=America/Sao_Paulo
    restart: always

  # drawio:
  #   image: jgraph/drawio
  #   hostname: drawio
  #   restart: unless-stopped
  #   networks:
  #     - zabbix-lab-network
  #   environment:
  #     PUBLIC_DNS: drawio
  #     ORGANISATION_UNIT: zabbixlab
  #     ORGANISATION: zabbixlab
  #     CITY: zabbixlab
  #     STATE: zabbixlab
  #     COUNTRY_CODE: BR

  # gitlab:
  #   image: gitlab/gitlab-ce:latest
  #   restart: unless-stopped
  #   hostname: gitlab
  #   networks:
  #     - zabbix-lab-network
  #   environment:
  #     GITLAB_OMNIBUS_CONFIG: |
  #       external_url 'http://gitlab.example.com:8929'
  #       gitlab_rails['gitlab_shell_ssh_port'] = 2224
  #   ports:
  #     - "8929:8929"
  #     - "2224:22"
  #   volumes:
  #     - "$GITLAB_HOME/config:/etc/gitlab"
  #     - "$GITLAB_HOME/logs:/var/log/gitlab"
  #     - "$GITLAB_HOME/data:/var/opt/gitlab"
